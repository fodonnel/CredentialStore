<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="671" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2017-07-08" time="20:28:17">
  <environment user="ferga" machine-name="DESKTOP-PC1JBHQ" cwd="C:\code\CredentialStore" user-domain="DESKTOP-PC1JBHQ" platform="Microsoft Windows 10 Pro|C:\WINDOWS|\Device\Harddisk0\Partition2" nunit-version="2.5.8.0" os-version="10.0.15063" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-AU" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="40.4375" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\code\CredentialStore\modules\CredentialStore\tests\Get-CsCredential.Tests.ps1" executed="True" result="Success" success="True" time="0.4534" asserts="0" description="C:\code\CredentialStore\modules\CredentialStore\tests\Get-CsCredential.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CsCredential" executed="True" result="Success" success="True" time="0.4534" asserts="0" description="Get-CsCredential">
            <results>
              <test-suite type="TestFixture" name="Get a single Credential" executed="True" result="Success" success="True" time="0.2699" asserts="0" description="Get a single Credential">
                <results>
                  <test-case description="should get a single user" name="Get-CsCredential.Get a single Credential.should get a single user" time="0.2699" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Credential does not exist" executed="True" result="Success" success="True" time="0.1183" asserts="0" description="Credential does not exist">
                <results>
                  <test-case description="should throw a exception" name="Get-CsCredential.Credential does not exist.should throw a exception" time="0.1183" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CredentialStore file does not exist" executed="True" result="Success" success="True" time="0.0653" asserts="0" description="CredentialStore file does not exist">
                <results>
                  <test-case description="should throw a validation exception" name="Get-CsCredential.CredentialStore file does not exist.should throw a validation exception" time="0.0653" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\CredentialStore\modules\CredentialStore\tests\Get-CsEntry.Tests.ps1" executed="True" result="Success" success="True" time="1.1564" asserts="0" description="C:\code\CredentialStore\modules\CredentialStore\tests\Get-CsEntry.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CsEntry" executed="True" result="Success" success="True" time="1.1564" asserts="0" description="Get-CsEntry">
            <results>
              <test-suite type="TestFixture" name="Get all the Entries" executed="True" result="Success" success="True" time="0.5267" asserts="0" description="Get all the Entries">
                <results>
                  <test-case description="should get all the entries" name="Get-CsEntry.Get all the Entries.should get all the entries" time="0.5267" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Getting entries by Name" executed="True" result="Success" success="True" time="0.3104" asserts="0" description="Getting entries by Name">
                <results>
                  <test-case description="should be able to get an entry by its exact name" name="Get-CsEntry.Getting entries by Name.should be able to get an entry by its exact name" time="0.1385" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should be able to get an entries by regex pattern" name="Get-CsEntry.Getting entries by Name.should be able to get an entries by regex pattern" time="0.0878" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should be able to get an entries by any regex pattern in name array" name="Get-CsEntry.Getting entries by Name.should be able to get an entries by any regex pattern in name array" time="0.0841" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CredentialStore file does not exist" executed="True" result="Success" success="True" time="0.0755" asserts="0" description="CredentialStore file does not exist">
                <results>
                  <test-case description="should throw a validation exception" name="Get-CsEntry.CredentialStore file does not exist.should throw a validation exception" time="0.0755" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CredentialStore is for a different user" executed="True" result="Success" success="True" time="0.1133" asserts="0" description="CredentialStore is for a different user">
                <results>
                  <test-case description="should throw a exception" name="Get-CsEntry.CredentialStore is for a different user.should throw a exception" time="0.1133" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CredentialStore is for a different computer" executed="True" result="Success" success="True" time="0.1305" asserts="0" description="CredentialStore is for a different computer">
                <results>
                  <test-case description="should throw a exception" name="Get-CsEntry.CredentialStore is for a different computer.should throw a exception" time="0.1305" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\CredentialStore\modules\CredentialStore\tests\Get-CsPassword.Tests.ps1" executed="True" result="Success" success="True" time="0.8378" asserts="0" description="C:\code\CredentialStore\modules\CredentialStore\tests\Get-CsPassword.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CsPassword" executed="True" result="Success" success="True" time="0.8378" asserts="0" description="Get-CsPassword">
            <results>
              <test-suite type="TestFixture" name="Get a single Password" executed="True" result="Success" success="True" time="0.4222" asserts="0" description="Get a single Password">
                <results>
                  <test-case description="should get a single Password" name="Get-CsPassword.Get a single Password.should get a single Password" time="0.4222" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Get a single raw Password" executed="True" result="Success" success="True" time="0.1608" asserts="0" description="Get a single raw Password">
                <results>
                  <test-case description="should get a single Password" name="Get-CsPassword.Get a single raw Password.should get a single Password" time="0.1608" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Entry does not exist" executed="True" result="Success" success="True" time="0.178" asserts="0" description="Entry does not exist">
                <results>
                  <test-case description="should throw a exception" name="Get-CsPassword.Entry does not exist.should throw a exception" time="0.178" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CredentialStore file does not exist" executed="True" result="Success" success="True" time="0.0768" asserts="0" description="CredentialStore file does not exist">
                <results>
                  <test-case description="should throw a validation exception" name="Get-CsPassword.CredentialStore file does not exist.should throw a validation exception" time="0.0768" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\CredentialStore\modules\CredentialStore\tests\Initialize-CsStore.Tests.ps1" executed="True" result="Success" success="True" time="0.574" asserts="0" description="C:\code\CredentialStore\modules\CredentialStore\tests\Initialize-CsStore.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Initialize-CsStore" executed="True" result="Success" success="True" time="0.574" asserts="0" description="Initialize-CsStore">
            <results>
              <test-suite type="TestFixture" name="Create a new CredentialStore file" executed="True" result="Success" success="True" time="0.2096" asserts="0" description="Create a new CredentialStore file">
                <results>
                  <test-case description="should create a new CredentialStore file" name="Initialize-CsStore.Create a new CredentialStore file.should create a new CredentialStore file" time="0.189" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should contain an empty credentials collection" name="Initialize-CsStore.Create a new CredentialStore file.should contain an empty credentials collection" time="0.0206" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="File already exists exist" executed="True" result="Success" success="True" time="0.1077" asserts="0" description="File already exists exist">
                <results>
                  <test-case description="should throw an exception" name="Initialize-CsStore.File already exists exist.should throw an exception" time="0.1077" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="New CredentialStore should set file meta data" executed="True" result="Success" success="True" time="0.2567" asserts="0" description="New CredentialStore should set file meta data">
                <results>
                  <test-case description="should set the username" name="Initialize-CsStore.New CredentialStore should set file meta data.should set the username" time="0.184" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should set the computer name" name="Initialize-CsStore.New CredentialStore should set file meta data.should set the computer name" time="0.0224" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should set the created date" name="Initialize-CsStore.New CredentialStore should set file meta data.should set the created date" time="0.0503" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\CredentialStore\modules\CredentialStore\tests\PSScriptAnalyzer.Tests.ps1" executed="True" result="Success" success="True" time="24.0884" asserts="0" description="C:\code\CredentialStore\modules\CredentialStore\tests\PSScriptAnalyzer.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing all Modules against default PSScriptAnalyzer rule-set" executed="True" result="Success" success="True" time="2.4325" asserts="0" description="Testing all Modules against default PSScriptAnalyzer rule-set">
            <results>
              <test-suite type="TestFixture" name="Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'" executed="True" result="Success" success="True" time="2.4325" asserts="0" description="Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'">
                <results>
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1848" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.2929" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0493" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0518" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0479" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.2843" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0529" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0549" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0524" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0633" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0845" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore\CredentialStore.psm1'.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Testing all Script against default PSScriptAnalyzer rule-set" executed="True" result="Success" success="True" time="21.6558" asserts="0" description="Testing all Script against default PSScriptAnalyzer rule-set">
            <results>
              <test-suite type="TestFixture" name="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'" executed="True" result="Success" success="True" time="2.2413" asserts="0" description="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'">
                <results>
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1463" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0514" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.2947" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0503" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0357" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0452" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0221" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0501" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.2891" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0537" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0279" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsCredential.ps1'.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'" executed="True" result="Success" success="True" time="1.7361" asserts="0" description="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'">
                <results>
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.0911" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.0485" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0515" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0497" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0527" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0546" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'" executed="True" result="Success" success="True" time="3.7397" asserts="0" description="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'">
                <results>
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0261" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.6513" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0638" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0646" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0259" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.3872" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.4914" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0471" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.6487" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0295" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0417" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0305" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'" executed="True" result="Success" success="True" time="3.2476" asserts="0" description="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'">
                <results>
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.0961" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0308" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.2795" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0304" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.046" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.1186" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.1051" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.1161" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.1009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.1461" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0857" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0288" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0698" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.1984" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.4964" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0562" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0563" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.2871" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0491" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0467" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0267" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0282" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Get-CsPassword.ps1'.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'" executed="True" result="Success" success="True" time="2.4877" asserts="0" description="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'">
                <results>
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1492" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0625" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0315" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.4134" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0416" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0517" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0511" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0285" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0491" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0206" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0488" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0523" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0259" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.4001" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0562" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0334" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0499" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Initialize-CsStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'" executed="True" result="Success" success="True" time="1.5913" asserts="0" description="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'">
                <results>
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.0678" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.037" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0495" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0287" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0338" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0514" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0507" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0309" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0593" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0667" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0294" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0289" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0327" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0358" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsDefaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'" executed="True" result="Success" success="True" time="2.9508" asserts="0" description="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'">
                <results>
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.0771" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0358" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0353" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.7018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.05" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0601" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0512" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0492" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0357" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0302" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.6714" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0566" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0327" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0349" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0247" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0294" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0357" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0288" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Set-CsEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'" executed="True" result="Success" success="True" time="1.6218" asserts="0" description="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'">
                <results>
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.0634" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0515" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0315" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0506" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0513" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0228" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0302" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0327" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0357" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0303" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0534" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0503" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0257" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.054" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0467" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\src\Test-CsEntryName.ps1'.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0489" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'" executed="True" result="Success" success="True" time="2.0396" asserts="0" description="Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'">
                <results>
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1036" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0294" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.2898" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0303" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0463" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0273" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0576" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0315" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0301" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.029" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0317" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.2774" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0287" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0266" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0295" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0327" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.052" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore\tests\Test-CsEntryName.Test.ps1'.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.052" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\CredentialStore\modules\CredentialStore\tests\Set-CsEntry.Tests.ps1" executed="True" result="Success" success="True" time="1.3857" asserts="0" description="C:\code\CredentialStore\modules\CredentialStore\tests\Set-CsEntry.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Set-CsEntry" executed="True" result="Success" success="True" time="1.3857" asserts="0" description="Set-CsEntry">
            <results>
              <test-suite type="TestFixture" name="Adding a new Credential without description" executed="True" result="Success" success="True" time="0.3167" asserts="0" description="Adding a new Credential without description">
                <results>
                  <test-case description="should add the new credential" name="Set-CsEntry.Adding a new Credential without description.should add the new credential" time="0.2451" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should save the username" name="Set-CsEntry.Adding a new Credential without description.should save the username" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should encrypt and save the password" name="Set-CsEntry.Adding a new Credential without description.should encrypt and save the password" time="0.0253" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should have empty description" name="Set-CsEntry.Adding a new Credential without description.should have empty description" time="0.0246" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Adding a new Credential with description" executed="True" result="Success" success="True" time="0.1779" asserts="0" description="Adding a new Credential with description">
                <results>
                  <test-case description="should set the description" name="Set-CsEntry.Adding a new Credential with description.should set the description" time="0.1779" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Updating an existing entry without description" executed="True" result="Success" success="True" time="0.2506" asserts="0" description="Updating an existing entry without description">
                <results>
                  <test-case description="should not add a the new credential" name="Set-CsEntry.Updating an existing entry without description.should not add a the new credential" time="0.1793" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should update the username" name="Set-CsEntry.Updating an existing entry without description.should update the username" time="0.0203" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should encrypt and update the password" name="Set-CsEntry.Updating an existing entry without description.should encrypt and update the password" time="0.0297" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should have empty description" name="Set-CsEntry.Updating an existing entry without description.should have empty description" time="0.0213" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Pipeline support" executed="True" result="Success" success="True" time="0.2452" asserts="0" description="Pipeline support">
                <results>
                  <test-case description="should update the existing credential" name="Set-CsEntry.Pipeline support.should update the existing credential" time="0.2114" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should add the new credential" name="Set-CsEntry.Pipeline support.should add the new credential" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CredentialStore file does not exist" executed="True" result="Success" success="True" time="0.0761" asserts="0" description="CredentialStore file does not exist">
                <results>
                  <test-case description="should throw a validation exception" name="Set-CsEntry.CredentialStore file does not exist.should throw a validation exception" time="0.0761" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CredentialStore is for a different user" executed="True" result="Success" success="True" time="0.1551" asserts="0" description="CredentialStore is for a different user">
                <results>
                  <test-case description="should throw a exception" name="Set-CsEntry.CredentialStore is for a different user.should throw a exception" time="0.1551" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CredentialStore is for a different computer" executed="True" result="Success" success="True" time="0.1642" asserts="0" description="CredentialStore is for a different computer">
                <results>
                  <test-case description="should throw a exception" name="Set-CsEntry.CredentialStore is for a different computer.should throw a exception" time="0.1642" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\tests\Export-CsKeyVaultStore.Tests.ps1" executed="True" result="Success" success="True" time="0.2375" asserts="0" description="C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\tests\Export-CsKeyVaultStore.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Export-CsKeyVaultStore" executed="True" result="Success" success="True" time="0.2375" asserts="0" description="Export-CsKeyVaultStore">
            <results>
              <test-suite type="TestFixture" name="Export a CredentialStore to a Vault" executed="True" result="Success" success="True" time="0.2375" asserts="0" description="Export a CredentialStore to a Vault">
                <results>
                  <test-case description="Should add the entries to the vault" name="Export-CsKeyVaultStore.Export a CredentialStore to a Vault.Should add the entries to the vault" time="0.2375" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\tests\Get-CsKeyVaultEntry.Tests.ps1" executed="True" result="Success" success="True" time="0.3928" asserts="0" description="C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\tests\Get-CsKeyVaultEntry.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CsKeyVaultEntry" executed="True" result="Success" success="True" time="0.3928" asserts="0" description="Get-CsKeyVaultEntry">
            <results>
              <test-suite type="TestFixture" name="Get an from azure entry by name" executed="True" result="Success" success="True" time="0.2436" asserts="0" description="Get an from azure entry by name">
                <results>
                  <test-case description="should be able to the get entry by exact name" name="Get-CsKeyVaultEntry.Get an from azure entry by name.should be able to the get entry by exact name" time="0.1288" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should be able to the get entry by wildcard" name="Get-CsKeyVaultEntry.Get an from azure entry by name.should be able to the get entry by wildcard" time="0.0541" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should be able to the get entry by array" name="Get-CsKeyVaultEntry.Get an from azure entry by name.should be able to the get entry by array" time="0.0608" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Only get CredentialStore entries from the vault" executed="True" result="Success" success="True" time="0.1492" asserts="0" description="Only get CredentialStore entries from the vault">
                <results>
                  <test-case description="should discard entries not belonging to the CredentialStore" name="Get-CsKeyVaultEntry.Only get CredentialStore entries from the vault.should discard entries not belonging to the CredentialStore" time="0.1492" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\tests\Import-CsKeyVaultStore.Tests.ps1" executed="True" result="Success" success="True" time="0.2381" asserts="0" description="C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\tests\Import-CsKeyVaultStore.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Import-CsKeyVaultStore" executed="True" result="Success" success="True" time="0.2381" asserts="0" description="Import-CsKeyVaultStore">
            <results>
              <test-suite type="TestFixture" name="Import a CredentialStore from Vault to File" executed="True" result="Success" success="True" time="0.2381" asserts="0" description="Import a CredentialStore from Vault to File">
                <results>
                  <test-case description="Should Initialise a local CredentialStore" name="Import-CsKeyVaultStore.Import a CredentialStore from Vault to File.Should Initialise a local CredentialStore" time="0.2055" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should add the entries from the vault" name="Import-CsKeyVaultStore.Import a CredentialStore from Vault to File.Should add the entries from the vault" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\tests\PSScriptAnalyzer.Tests.ps1" executed="True" result="Success" success="True" time="8.775" asserts="0" description="C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\tests\PSScriptAnalyzer.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Testing all Modules against default PSScriptAnalyzer rule-set" executed="True" result="Success" success="True" time="1.6855" asserts="0" description="Testing all Modules against default PSScriptAnalyzer rule-set">
            <results>
              <test-suite type="TestFixture" name="Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'" executed="True" result="Success" success="True" time="1.6855" asserts="0" description="Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'">
                <results>
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1322" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.034" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.043" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0515" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0574" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0301" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.038" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0259" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0404" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0315" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0364" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0408" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0301" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Modules against default PSScriptAnalyzer rule-set.Testing Module 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\CredentialStore.AzureKeyVault.psm1'.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Testing all Script against default PSScriptAnalyzer rule-set" executed="True" result="Success" success="True" time="7.0895" asserts="0" description="Testing all Script against default PSScriptAnalyzer rule-set">
            <results>
              <test-suite type="TestFixture" name="Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'" executed="True" result="Success" success="True" time="1.8473" asserts="0" description="Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'">
                <results>
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.1122" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.049" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0282" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0333" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.039" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0353" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0662" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0617" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0277" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0209" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0599" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0518" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0512" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0571" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0593" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.04" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.027" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0596" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0928" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0506" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0524" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0347" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Export-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'" executed="True" result="Success" success="True" time="2.0005" asserts="0" description="Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'">
                <results>
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.0812" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.059" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0702" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.1084" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.0359" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0444" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0487" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0947" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0324" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0611" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0617" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.064" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0248" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0354" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0286" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0306" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.0329" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0288" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0294" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0533" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0503" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0499" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0933" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0647" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0634" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Get-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0304" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'" executed="True" result="Success" success="True" time="1.6546" asserts="0" description="Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'">
                <results>
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.0681" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0568" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0721" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0268" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0533" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.035" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.041" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0882" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0597" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0296" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0307" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0286" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0327" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0374" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Import-CsKeyVaultStore.ps1'.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'" executed="True" result="Success" success="True" time="1.5872" asserts="0" description="Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'">
                <results>
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.0924" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0403" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0377" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.0685" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0375" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0287" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.042" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0307" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0632" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0592" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0281" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0385" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0314" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.0643" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssignments" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0276" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0276" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0259" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0296" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.03" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0339" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing all Script against default PSScriptAnalyzer rule-set.Testing Script 'C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\src\Set-CsKeyVaultEntry.ps1'.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\tests\Set-CsKeyVaultEntry.Tests.ps1" executed="True" result="Success" success="True" time="0.4102" asserts="0" description="C:\code\CredentialStore\modules\CredentialStore.AzureKeyVault\tests\Set-CsKeyVaultEntry.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Set-CsKeyVaultEntry" executed="True" result="Success" success="True" time="0.4102" asserts="0" description="Set-CsKeyVaultEntry">
            <results>
              <test-suite type="TestFixture" name="Adding a new Credential without description" executed="True" result="Success" success="True" time="0.1233" asserts="0" description="Adding a new Credential without description">
                <results>
                  <test-case description="should add the entry to the vault" name="Set-CsKeyVaultEntry.Adding a new Credential without description.should add the entry to the vault" time="0.1233" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Adding a new Credential with description" executed="True" result="Success" success="True" time="0.0709" asserts="0" description="Adding a new Credential with description">
                <results>
                  <test-case description="should add the entry to the vault" name="Set-CsKeyVaultEntry.Adding a new Credential with description.should add the entry to the vault" time="0.0709" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Pipeline support" executed="True" result="Success" success="True" time="0.2161" asserts="0" description="Pipeline support">
                <results>
                  <test-case description="should set the entries" name="Set-CsKeyVaultEntry.Pipeline support.should set the entries" time="0.2161" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\PsLogging\tests\Format-LogMessage.Tests.ps1" executed="True" result="Success" success="True" time="0.2018" asserts="0" description="C:\code\PsLogging\tests\Format-LogMessage.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Format-LogMessage" executed="True" result="Success" success="True" time="0.2018" asserts="0" description="Format-LogMessage">
            <results>
              <test-suite type="TestFixture" name="Format an message" executed="True" result="Success" success="True" time="0.1141" asserts="0" description="Format an message">
                <results>
                  <test-case description="should return the message" name="Format-LogMessage.Format an message.should return the message" time="0.1141" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Format a message with an error" executed="True" result="Success" success="True" time="0.0877" asserts="0" description="Format a message with an error">
                <results>
                  <test-case description="should return the message" name="Format-LogMessage.Format a message with an error.should return the message" time="0.0877" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\PsLogging\tests\Initialize-Logging.Tests.ps1" executed="True" result="Success" success="True" time="0.419" asserts="0" description="C:\code\PsLogging\tests\Initialize-Logging.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Initialize-Logging" executed="True" result="Success" success="True" time="0.419" asserts="0" description="Initialize-Logging">
            <results>
              <test-suite type="TestFixture" name="Default logging" executed="True" result="Success" success="True" time="0.2209" asserts="0" description="Default logging">
                <results>
                  <test-case description="should set the the default log file" name="Initialize-Logging.Default logging.should set the the default log file" time="0.1924" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should set the the log file parameters" name="Initialize-Logging.Default logging.should set the the log file parameters" time="0.0285" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Console only logging" executed="True" result="Success" success="True" time="0.0844" asserts="0" description="Console only logging">
                <results>
                  <test-case description="should set the the console log file" name="Initialize-Logging.Console only logging.should set the the console log file" time="0.0844" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="Custom logging" executed="True" result="Success" success="True" time="0.1137" asserts="0" description="Custom logging">
                <results>
                  <test-case description="should set the the custom log file" name="Initialize-Logging.Custom logging.should set the the custom log file" time="0.0904" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="should set the the custom parameters" name="Initialize-Logging.Custom logging.should set the the custom parameters" time="0.0233" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\PsLogging\tests\Write-LogDebug.Tests.ps1" executed="True" result="Success" success="True" time="0.2519" asserts="0" description="C:\code\PsLogging\tests\Write-LogDebug.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Write-LogDebug" executed="True" result="Success" success="True" time="0.2519" asserts="0" description="Write-LogDebug">
            <results>
              <test-suite type="TestFixture" name="Write an debug log message" executed="True" result="Success" success="True" time="0.2519" asserts="0" description="Write an debug log message">
                <results>
                  <test-case description="should write a log message" name="Write-LogDebug.Write an debug log message.should write a log message" time="0.2519" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\PsLogging\tests\Write-LogFatal.Tests.ps1" executed="True" result="Success" success="True" time="0.2167" asserts="0" description="C:\code\PsLogging\tests\Write-LogFatal.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Write-LogWarn" executed="True" result="Success" success="True" time="0.2167" asserts="0" description="Write-LogWarn">
            <results>
              <test-suite type="TestFixture" name="Write an warn log message" executed="True" result="Success" success="True" time="0.2167" asserts="0" description="Write an warn log message">
                <results>
                  <test-case description="should write a log message" name="Write-LogWarn.Write an warn log message.should write a log message" time="0.2167" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\PsLogging\tests\Write-LogInfo.Tests.ps1" executed="True" result="Success" success="True" time="0.3026" asserts="0" description="C:\code\PsLogging\tests\Write-LogInfo.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Write-LogInfo" executed="True" result="Success" success="True" time="0.3026" asserts="0" description="Write-LogInfo">
            <results>
              <test-suite type="TestFixture" name="Write an info log message" executed="True" result="Success" success="True" time="0.3026" asserts="0" description="Write an info log message">
                <results>
                  <test-case description="should write a log message" name="Write-LogInfo.Write an info log message.should write a log message" time="0.3026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\PsLogging\tests\Write-LogTrace.Tests.ps1" executed="True" result="Success" success="True" time="0.195" asserts="0" description="C:\code\PsLogging\tests\Write-LogTrace.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Write-LogTrace" executed="True" result="Success" success="True" time="0.195" asserts="0" description="Write-LogTrace">
            <results>
              <test-suite type="TestFixture" name="Write an trace log message" executed="True" result="Success" success="True" time="0.195" asserts="0" description="Write an trace log message">
                <results>
                  <test-case description="should write a log message" name="Write-LogTrace.Write an trace log message.should write a log message" time="0.195" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\code\PsLogging\tests\Write-LogWarn.Tests.ps1" executed="True" result="Success" success="True" time="0.3011" asserts="0" description="C:\code\PsLogging\tests\Write-LogWarn.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Write-LogWarn" executed="True" result="Success" success="True" time="0.3011" asserts="0" description="Write-LogWarn">
            <results>
              <test-suite type="TestFixture" name="Write an warn log message" executed="True" result="Success" success="True" time="0.3011" asserts="0" description="Write an warn log message">
                <results>
                  <test-case description="should write a log message" name="Write-LogWarn.Write an warn log message.should write a log message" time="0.3011" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>